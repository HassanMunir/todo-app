name: CI Pipeline - Backend

on:
  push:
    branches:
      - main
    paths:
      - "server/**"
      - ".github/workflows/backend.yml"
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.4"

      - name: Run Go Tests
        run: |
          cd server
          go test -v ./...

      - name: Run Semgrep SAST on frontend
        run: |
          pip install semgrep
          semgrep --config=./server/semgrep.yml ./server

      - name: Verify code formatting
        run: npx prettier --check .

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Image Tags
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_TAG=ghcr.io/${REPO_OWNER}/todo-app/server:${{ github.sha }}" >> $GITHUB_ENV
          echo "IMAGE_TAG_LATEST=ghcr.io/${REPO_OWNER}/todo-app/server:latest" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t $IMAGE_TAG -t $IMAGE_TAG_LATEST -f server/Dockerfile server

      - name: Scan image
        uses: anchore/scan-action@v6
        with:
          image: "${{ env.IMAGE_TAG_LATEST }}"
          fail-build: false

      - uses: anchore/sbom-action@v0
        with:
          image: "${{ env.IMAGE_TAG_LATEST }}"
          path: .
          format: spdx-json
          upload-artifact: true
          upload-release-assets: true
